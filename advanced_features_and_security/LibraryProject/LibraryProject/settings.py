"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&!2%kk4gj&l#)64sa90q&33+m&6x7((uigiweruw_bi)wqe3(='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf.CustomUser',
    'relationship_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Add these lines to your settings.py file to configure redirects
# after login and logout.
AUTH_USER_MODEL = 'relationship_app.CustomUser'
# URL to redirect to after a successful login.
# Assuming a 'home' page exists. Change this as needed.
LOGIN_REDIRECT_URL = 'home'

# URL to redirect to after a user logs out.
# This will redirect them back to the login page.
LOGOUT_REDIRECT_URL = 'login'

# Add these lines to your settings.py file to configure redirects
# after login and logout.

# URL to redirect to after a successful login.
# This will redirect them to the member view, as the default starting point.
LOGIN_REDIRECT_URL = '/relationship-app/member/'

# URL to redirect to after a user logs out.
# This will redirect them back to the login page.
LOGOUT_REDIRECT_URL = '/relationship-app/login/'

# Security Settings
# Protects against common security vulnerabilities.

# X-Content-Type-Options header to prevent MIME type sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# X-XSS-Protection header to enable browser's built-in XSS filter
SECURE_BROWSER_XSS_FILTER = True

# X-Frame-Options header to protect against Clickjacking attacks
# Set to 'DENY' to prevent the site from being loaded in a frame
# or 'SAMEORIGIN' to allow framing only from the same origin.
X_FRAME_OPTIONS = 'DENY'

# Ensures that the CSRF cookie is only sent over a secure HTTPS connection
CSRF_COOKIE_SECURE = True

# Ensures that the session cookie is only sent over a secure HTTPS connection
SESSION_COOKIE_SECURE = True
LOGIN_REDIRECT_URL = '/relationship-app/member/'

# URL to redirect to after a user logs out.
# This will redirect them back to the login page.
LOGOUT_REDIRECT_URL = '/relationship-app/login/'

# --- Security Configuration ---

# Set to True to redirect all non-HTTPS requests to HTTPS.
# This ensures that all traffic is encrypted.
SECURE_SSL_REDIRECT = True

# HSTS settings
# This tells browsers to only access your site using HTTPS.
# The value is in seconds (31536000 is one year).
SECURE_HSTS_SECONDS = 31536000
# This ensures HSTS is also applied to subdomains.
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# Allows browsers to preload this HSTS policy, ensuring
# secure connections from the very first visit.
SECURE_HSTS_PRELOAD = True

# Cookie security settings
# Ensures the session cookie is only sent over a secure HTTPS connection.
SESSION_COOKIE_SECURE = True
# Ensures the CSRF cookie is only sent over a secure HTTPS connection.
CSRF_COOKIE_SECURE = True

# Header security settings
# Prevents browsers from MIME-sniffing a response away from the declared Content-Type.
SECURE_CONTENT_TYPE_NOSNIFF = True
# Enables the browser's built-in XSS filter.
SECURE_BROWSER_XSS_FILTER = True
# Prevents your site from being framed, protecting against clickjacking attacks.
# Set to 'DENY' to block all framing, or 'SAMEORIGIN' to allow framing from the same domain.
X_FRAME_OPTIONS = 'DENY'
